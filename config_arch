#!/bin/bash
# Copyright (c) 2014-2021, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in 
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

# Function to check directory writability and noexec flag
check_dir() {
    local dir=$1
    local mount_point

    # Check if directory exists and is writable
    if [[ -d "$dir" && -w "$dir" ]]; then
        # Find the mount point for the directory
        mount_point=$(df --output=target "$dir" | tail -1)

        # Check if the mount point has the noexec flag
        if ! mount | grep " on $mount_point type " | grep -q 'noexec'; then
            # Return success if the directory is suitable
            return 0
        fi
    fi

    # Return failure
    return 1
}

# Initialize working_path as an empty string
working_path=""

# Check /tmp, /dev/shm, and current directory in order
if check_dir "/tmp"; then
    working_path="/tmp"
elif check_dir "/dev/shm"; then
    working_path="/dev/shm"
elif check_dir "$(pwd)"; then
    working_path="$(pwd)"
fi

if [ -z "$working_path" ]; then
    exit 1
fi

topdir="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
dir=$(mktemp -d -p $working_path)
src=$dir/arch.c
exe=$dir/arch
cat <<EOF >$src
#include <stdio.h>
#include "gdrconfig.h"
int main(int argc, char *argv[])
{
#ifdef GDRAPI_X86
  printf("X86\n");
#elif defined(GDRAPI_POWER)
  printf("POWER\n");
#elif defined(GDRAPI_ARM64)
  printf("ARM64\n");
#else
  printf("ERROR\n");
#endif
  return 0;
}
EOF

gcc -I ${topdir}/include -I ${topdir}/src $src -o $exe
$exe 
rm -rf $dir
